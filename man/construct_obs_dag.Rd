% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dag.R
\name{construct_obs_dag}
\alias{construct_obs_dag}
\title{Construct a directed acyclic graph between two \code{sf} objects with point geometry.}
\usage{
construct_obs_dag(x, y, n_neighbours = 10, check_intersection = T,
  max_dist = Inf, distance_units = "km", silent = T)
}
\arguments{
\item{x}{An \code{sf} object containing point geometries. Directed edges will
enter nodes in x.}

\item{y}{An \code{sf} objecy containing point geometries. Directed edges will
leave nodes in y.}

\item{n_neighbours}{An integer giving the number of parents for each node.}

\item{check_intersection}{Logical. If true, if any point in \code{x} is also
a point in \code{y}, then there will be exactly one edge into that point in
\code{x} coming from the same point in \code{y} (with a distance of 0).}

\item{max_dist}{The maximum distance (in m) to search for parents.}

\item{return_units}{Which units should be used for distances?}
}
\value{
Two lists. `edge_list` is a list with an entry for each node containing
 the indices of the parents of that node. `dist_list` is a list with an entry
 for each node containing the distance between that node and its parents
 (first row) and the pairwise distances between its parents.
}
\description{
The directed acyclic graph is stored as an ordered list. The i'th element of
 the list is a vector containing indices j such that there is a directed edge
 from node j (in y) to node i (in x). If any location in x is present in y,
 there is only a single edge connecting the location in y to the same location in x.
}
